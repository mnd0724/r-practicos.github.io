---
title: "entrega2.2"
format: html
editor: visual
bibliography: trabajo1.bib
link-citations: TRUE
---


## **La segregación socioespacial dentro de la Región Metropolitana y el acceso a áreas verdes.**

La ciudad de Santiago se caracteriza por su crecimiento exponencial dada la constante migración. Desde el proceso de redistribución espacial local, es decir el movimiento dentro del mismo territorio de la población chilena, hasta la migración internacional. Dentro de los otros factores que caracterizan a la ciudad de Santiago es que la gran parte de la población se concentra en esta zona, siendo así una de las ciudades con mayor densidad dentro de Chile. Esto hace que exista una gran segregación residencial, que se puede definir según Sabatini, [@franciscosabatini2001] como el grado de proximidad espacial o de aglomeración territorial de las familias pertenecientes a un mismo grupo social, sea que éste se defina en términos étnicos, etarios, de preferencias religiosas o socioeconómicos. Según el autor [@franciscosabatini2001] existen tres dimensiones principales: (1) la tendencia de los grupos sociales a concentrarse en algunas áreas de la ciudad (2) la conformación de áreas o barrios socialmente homogéneos y (3) la percepción subjetiva que tienen de la segregación “objetiva” (las dos primeras dimensiones).

“La expansión que crea nuevas periferias en la ciudad-región, tanto como la propia transformación de la periferia popular de la ciudad compacta, vinculada al arribo de “barrios cerrados” orientados a hogares de ingresos medios y altos, generan nuevas formas de segregación residencial que difícilmente pueden asimilarse a los efectos y significados de la segregación de gran escala.” [@rasse2020]

Santiago se caracteriza por presentar una segregación a gran escala. Determinado por extensas zonas de pobreza y la notoria aglomeración de los grupos de altos ingresos en una zona definida [@franciscosabatini2001] , esto trae consecuencias poco deseables como, las que afecten en las oportunidades de sus habitantes, la distribución y accesibilidad a las áreas verdes, estigma y discriminación, acceso a establecimientos educacionales de calidad, entre otros. [@rasse2020]

En este trabajo, nos centraremos en cómo la segregación socioespacial es un factor determinante para el acceso a áreas verde dentro de la Región Metropolitana y la gran diferencia que existe entre comunas, teniendo en cuenta que las áreas verdes urbanas son elementos fundamentales para mejorar el bienestar de la población, especialmente en grandes ciudades [@reyespäcke2010] Dentro de la ciudad de Santiago, a pesar de que han existido intentos e inversiones para la recuperación de áreas verdes persisten grandes diferencias entre comunas [@reyespäcke2010] El acceso a áreas verdes tiene una gran importancia social en la población

“Desde el punto de vista social, un mayor tamaño de las áreas verdes –y de los espacios públicos en general– permite la realización de diversas actividades y con ello facilita la presencia simultánea de distintos grupos, por ejemplo niños, adultos y jóvenes.” [@reyespäcke2010]

Finalmente, las áreas de alta densidad en la periferia carecen de áreas verdes, lo que implica que las políticas de densificación deben equilibrar las tasas de densidad y abordar las diferencias espaciales en la provisión de servicios sociales y comodidades ambientales [@aquino2014]

## Entrega 2


```{r}

pacman::p_load(sjlabelled,
               dplyr, #Manipulacion de datos
               stargazer, #Tablas
               sjmisc, # Tablas
               summarytools, # Tablas
               kableExtra, #Tablas
               sjPlot, #Tablas y gráficos
               corrplot, # Correlaciones
               sessioninfo, # Información de la sesión de trabajo
               ggplot2,
               haven,
               GGally,
               ggpubr,
               textreg,
               car,
               fastDummies,
               sjlabelled,
               ggeffects,
               texreg) 

rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica#Cargar base de datos

data <- read_dta("input/ELSOC_W01_v4.01_Stata14.dta")
View(data)
dim(data) #2927 428
names(data)

proc_data <- data %>% select(t06_01,
                             t06_02,
                             t06_03,
                             t06_04,
                             t06_06,
                             t08,
                             t10,
                             t11_04,
                             m29,
                             comuna,
                             region,
                             m0_edad,
                             m0_sexo)
view(proc_data)
sjmisc::descr(proc_data)
proc_data <- proc_data %>% rename("sats_seguridad" =t06_01,
                                  "sats_conectividad"=t06_02, # Satisfacción conectividad
                                  "sats_averde"=t06_03, # Satisfacción área verde
                                  "sats_limpieza"=t06_04,# Satisfacción Limpieza
                                  "sats_colegios"=t06_06, #satisfacción cercanía a colegios de buena calidad 
                                  "percp_barrio"=t08,
                                  "percp_seguridad"=t10,
                                  "frq_vecinosbasura"=t11_04,
                                  "ingreso"=m29,
                                  "edad"=m0_edad,
                                  "sexo"=m0_sexo)


#VER LOS NOMBRES DE LAS VARIABLES
names(proc_data)

#Filtrar por comunas de la región metropolitana
proc_data <- proc_data %>% dplyr::filter(region == "Metropolitana") # Filtrar por región (
proc_data <- filter(proc_data, comuna %in% c("Providencia",
                                             "Colina",
                                             "Maipu",
                                             "Las Condes",
                                             "Santiago",
                                             "Puente Alto",
                                             "La Florida",
                                             "San Bernardo"))
view(proc_data)


sjmisc::descr(proc_data,
              show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
  kable(.,"markdown")
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
view(dfSummary(proc_data, headings=FALSE)) #Tabla como imagen
sum(is.na(proc_data))
proc_data <- proc_data %>%
  filter_all(all_vars(!is.na(.) & . != -999 & . != -888)) #Filtrar NA'S

summarytools::dfSummary(proc_data, plain.ascii = FALSE)
view(dfSummary(proc_data, headings=FALSE))  #SIN NA´S
```


### Gráficos

1.  **Satisfacción de la seguridad en el barrio;** se puede decir que dentro de las comunas seleccionadas existe una satisfacción con la seguridad del barrio, observando que la media está en el 4 (


```{r}
proc_data %>% ggplot(aes(x = sats_seguridad)) + 
  geom_bar(fill = "coral")+
  labs(title = "Satisfacción Seguridad en el Barrio",
       x = "Satisfacción Seguridad",
       y = "Frecuencia")
```


2.  **Satisfacción en la conectividad;** observamos a diferencia del primer punto, la satisfacción con la conectividad tiene una tendencia más clara, observamos que la mayoría de las personas eligen la opción 4. Podríamos pensar que si elegimos otras comunas para nuestro análisis este panorama podría cambiar, por ejemplo si eligieramos comunas mucho más perifericas.


```{r}
proc_data %>% ggplot(aes(x = sats_conectividad)) + 
  geom_bar(fill = "coral")+
  labs(title = "Satisfacción Conectividad",
       x = "Satisfacción Conectividad",
       y = "Frecuencia")
```


3.  **Satisfacción con las áreas verdes;** observamos que al igual que los items anteriores, existe una alta satisfacción en lo que son las áreas verdes cuando se analiza en conjunto las comunas.


```{r}
proc_data %>% ggplot(aes(x = sats_averde)) + 
  geom_bar(fill = "coral")+
  labs(title = "Satisfacción área verde",
       x = "Satisfacción área verde",
       y = "Frecuencia")
```


4.  


```{r}
proc_data %>% ggplot(aes(x = sats_limpieza)) + 
  geom_bar(fill = "coral")+
  labs(title = "Satisfacción Limpieza y Belleza en el Barrio",
       x = "Satisfacción Limpieza",
       y = "Frecuencia")
```


5.  


```{r}
proc_data %>% ggplot(aes(x = sats_colegios)) + 
  geom_bar(fill = "coral")+
  labs(title = "Satisfacción cercanía a colegios de buena calidad",
       x = "Satisfacción cercanía a colegios de buena calidad",
       y = "Frecuencia")
```


6\.


```{r}
proc_data %>% ggplot(aes(x = percp_barrio)) + 
  geom_bar(fill = "coral")+
  labs(title = "Percepción Evaluación del Barrio",
       x = "Percepción Evaluación del Barrio",
       y = "Frecuencia")
```


7\.


```{r}
proc_data %>% ggplot(aes(x = frq_vecinosbasura)) + 
  geom_bar(fill = "coral")+
  labs(title = "Satisfacción Limpi",
       x = "Satisfacción Limpieza",
       y = "Frecuencia")
```


## Entrega 3


```{r}
view(dfSummary(proc_data, headings=FALSE, graph.col = FALSE))
cor(proc_data$sats_averde, proc_data$ingreso)
cor(proc_data$sats_conectividad, proc_data$ingreso)
cor(proc_data$sats_limpieza, proc_data$ingreso)
na.omit(proc_data)

# Crear un vector con los nombres de las comunas
nombres_comunas <- c("Providencia", "Colina", "Las Condes", "Puente Alto", "La Florida", "Santiago", "Maipu", "San Bernardo")

# Ordenar alfabéticamente los nombres de las comunas
nombres_comunas <- sort(nombres_comunas)

# Crear un vector con los valores numéricos en orden alfabético
valores_numericos <- 1:length(nombres_comunas)

# Crear una nueva columna en el dataframe para asignar los valores numéricos
proc_data$comunas_numericas <- NA

# Asignar valores numéricos a las comunas
for (i in 1:length(nombres_comunas)) {
  proc_data$comunas_numericas[proc_data$comuna == nombres_comunas[i]] <- valores_numericos[i]
}

ggplot(proc_data, aes(x = comuna, y = sats_averde, fill = comuna)) +
  geom_bar(stat = "identity") +  # Utilizar stat = "identity" para usar los valores exactos de y
  labs(x = "Comuna", y = "Satisfacción con áreas verdes", title = "Satisfacción con áreas verdes por comuna") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar las etiquetas del eje x para mejor legibilidad

#calcular el valor máximo en Ingreso
max_valor <- max(proc_data$ingreso)
#Imprimir el valor máximo
print(max_valor)

# Calcular el valor mínimo en la variable
min_valor <- min(proc_data$ingreso)
# Imprimir el valor mínimo
print(min_valor)

ggplot(proc_data, aes(x = comuna, y = ingreso)) +
  geom_point() +  # Agregar puntos al gráfico
  labs(x = "Comuna", y = "Ingresos", title = "Gráfico de Dispersión de Ingresos por Comuna") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar las etiquetas del eje x para mejor legibilidad
  ylim(0, 8000000)

# Crear el gráfico de barras con escala logarítmica en el eje y y etiquetas personalizadas
ggplot(proc_data, aes(x = comuna, y = ingreso, fill = comuna)) +
  geom_bar(stat = "identity") +  # Utilizar stat = "identity" para usar los valores exactos de y
  labs(x = "Comuna", y = "Ingresos", title = "Ingresos por Comuna") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotar las etiquetas del eje x para mejor legibilidad
  scale_y_continuous(labels = scales::comma)  # Etiquetas personalizadas para los valores reales en el eje y

proc_data %>% dplyr::select(sats_seguridad, sats_conectividad, sats_averde, sats_limpieza) %>% 
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")

proc_data %>% dplyr::select(percp_barrio, percp_seguridad) %>% 
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")

proc_data %>% dplyr::select(frq_vecinosbasura) %>% 
  sjPlot::plot_stackfrq()+
  theme(legend.position = "bottom")

psych::alpha(dplyr::select(proc_data, sats_seguridad, sats_conectividad, sats_averde, sats_limpieza, sats_colegios))
#Sabemos que los valores de alfa van desde 0 y 1, cuando los valores
#son más cercanos a 1, existe una mayor confiabilidad 
#cuando el valor es mayor a 0.7 se considera como un valor aceptable
#Observamos que la variable
#Observamos que con estos 5 casos el raw.alpha es de 0.75
#lo que quiere decir que hay una confiabilidad aceptable 
#si eliminamos algunos de estps de estos items la confianza disminuiría, así que se pueden construir
#una escala con estas.

proc_data <- proc_data %>%
  rowwise() %>% 
  mutate(calidad_vida = sum(sats_limpieza, sats_seguridad, sats_conectividad, sats_averde, sats_colegios))
summary(proc_data$calidad_vida)

ggplot(proc_data, aes(x = calidad_vida)) +
  geom_histogram(binwidth=0.6, colour="black", fill="pink") +
  theme_bw() +
  xlab("Calidad de vida") +
  ylab("Cantidad")

#Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  # 5.00   15.00   18.00   16.76   20.00   25.00 
#Podemos observar que la mayor concentración de casos está en la 
#categoría 18 y que sumado a un promedio de 16.76 según los descriptivos 
#anteriores, podríamos afirmar que la calidad de vida en Chile es alta.

```


## Entrega 4


```{r}
proc_data <- proc_data %>%
  filter_all(all_vars(!is.na(.) & . != -999 & . != -888)) #Filtrar NA'S
view_df(proc_data,max.len = 50)

# Definir los límites del salario mínimo
salario_minimo <- 460000

frq(proc_data$grupo_ingreso)
proc_data$grupo_ingreso <- cut(
  proc_data$ingreso,
  breaks = c(-Inf, salario_minimo, 3 * salario_minimo, Inf),
  labels = c("Bajo", "Medio", "Alto"),
  right = TRUE
)

frq(proc_data$grupo_ingreso)
proc_data <- na.omit(proc_data)
reg1 <- lm(calidad_vida ~ 1, data=proc_data)
stargazer(reg1, type="text")

#ANALISIS
#En este caso, lo que nos interesa observar es el intercepto. Un intercepto de 
#16.759 nos indica la media de la calidad de vida.



#REGRESIÓN LINEAL SIMPLE
reg2 <- lm(calidad_vida ~ edad, data=proc_data)
reg3 <- lm(calidad_vida ~ grupo_ingreso, data=proc_data)
reg4 <- lm(calidad_vida ~ sexo, data=proc_data)

knitreg(list(reg2, reg3, reg4), 
        custom.model.names = c("Modelo 1",
                               "Modelo 2",
                               "Modelo 3"),
        custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
        custom.coef.names = c("Intercepto", 
                              "Edad",
                              "Ingreso Medio <br> <i>(Ingreso Bajo)</i>", 
                              "Ingreso Alto", 
                              "Mujer <br> <i>(Ref. Hombre)</i>"),
        caption = "Calidad de vida",
        caption.above = TRUE)

#Analisis 

#En el MODELO 1 




#REGRESION LINEAL MULTIPLE
reg5 <- lm(calidad_vida ~ edad + grupo_ingreso, data=proc_data)
reg6 <- lm(calidad_vida ~ edad + sexo, data=proc_data)
reg7 <- lm(calidad_vida ~ grupo_ingreso + sexo, data=proc_data)
reg8 <- lm(calidad_vida ~ edad + grupo_ingres#o + sexo, data=proc_data)

knitreg(list(reg5, reg6, reg7, reg8), 
        custom.model.names = c("Modelo 1",
                               "Modelo 2",
                               "Modelo 3",
                               "Modelo 4"),
        custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
        custom.coef.names = c("Intercepto", 
                              "Edad",
                              "Ingreso Medio <br> <i>(Ref. Ingreso Bajo)</i>", 
                              "Ingreso Alto", 
                              "Mujer <br> <i>(Ref. Hombre)</i>"),
        caption = "Calidad de vida",
        caption.above = TRUE)


plot_model(reg8, 
           title = "", #quitar titulo
           show.values = TRUE, #mostrar valor de efectos
           dot.size = 3, #tamaño circulos
           line.size = 1, #tamaño CI
           value.size = 4, #tamaño valor efectoss
           spacing = 1, #espacio entre efectos
           vline.color = "red", # linea roja en punto neutro (0)
           axis.labels = rev(c("Edad",
                               "Ingresos", 
                               "Mujer")), #con rev porque automatico los tira en otro orden
           show.legend = FALSE) + # variables dependientes
  theme_bw()

```

